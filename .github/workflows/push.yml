name: Build

on: [push]

env:
  APP_IMAGE_NAME: grozwalker/rails-app-1
  NGINX_IMAGE_NAME: grozwalker/rails-nginx-1
  COLOR_MAP: '{ success: "#008000", failure: "#800000" }'
  BUILDKIT_INLINE_CACHE: 1
  COMPOSE_DOCKER_CLI_BUILD: 1
  DOCKER_BUILDKIT: 1

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v2

      - name: Set tag to output
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD}}

      - name: Build App
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile.production
          cache-from: type=registry,ref=${{ env.APP_IMAGE_NAME }}:cached
          cache-to: type=inline
          push: true
          tags: ${{ env.APP_IMAGE_NAME }}:cached

      - name: Check
        run: |
          # TODO Какая-то херня. Выше делается образ, который используется в этом композе, но он его не использует и качает вроде бы этот же образ из реестра.
          docker-compose --file docker-compose.yml up --abort-on-container-exit

      - name: Push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile.production
          cache-from: type=registry,ref=${{ env.APP_IMAGE_NAME }}:cached
          push: true
          tags: ${{ env.APP_IMAGE_NAME }}:latest

      # - name: Build&Push nginx
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: services/web-nginx
      #     file: services/web-nginx/Dockerfile.production
      #     push: true
      #     tags: ${{ env.NGINX_IMAGE_NAME }}:latest

      # - name: Send notification into Slack
      #   if: ${{ always() }}
      #   uses: rtCamp/action-slack-notify@v2
      #   env:
      #     SLACK_COLOR: ${{ fromJson(env.COLOR_MAP)[job.status] }}
      #     SLACK_TITLE: ${{ job.status }}
      #     SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
